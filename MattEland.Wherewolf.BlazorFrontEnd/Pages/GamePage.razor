@page "/games/{GameId:guid}"
@using MattEland.Wherewolf.BlazorFrontEnd.Components
@inject NavigationManager NavigationManager;

<PageTitle>Wherewolf</PageTitle>

<MudText Typo="Typo.h1" data-testid="PageHeader">
    Let's Play Wherewolf!
</MudText>
<MudText Typo="Typo.subtitle2" data-testid="PageSubtitle" Class="mb-8">
    Welcome to game <small>@GameId</small> of the <strong>Wherewolf</strong>
    AI Simulation by <MudLink Href="https://MattEland.dev">Matt Eland</MudLink>
</MudText>

@if (Game is null)
{
    <MudAlert Severity="Severity.Error" Variant="Variant.Outlined">
        Game @GameId could not be found
    </MudAlert>
}
else
{
    <div style="display: grid; grid-template-columns: 3fr 1fr;">
        <MudCard Elevation="3" Class="pa-8 ma-2">
            <MudCardContent Style="flex-grow: 1;">
                <MudText Typo="Typo.h4" Class="my-4">Center Cards</MudText>
                <MudGrid>
                    @foreach (var slot in Game.CenterSlots)
                    {
                        <MudItem>
                            <SlotCardDisplay Slot="@slot" IsPlayer="false" PerspectivePlayer="@PerspectivePlayer"/>
                        </MudItem>
                    }
                </MudGrid>

                <MudDivider Class="my-8"/>

                <MudText Typo="Typo.h4" Class="my-4">Players</MudText>
                <MudGrid>
                    @foreach (var slot in Game.PlayerSlots)
                    {
                        <MudItem>
                            <SlotCardDisplay Slot="@slot" IsPlayer="true" PerspectivePlayer="@PerspectivePlayer"/>
                        </MudItem>
                    }
                </MudGrid>
            </MudCardContent>
            <MudCardActions Style="flex-grow: 0;">
                @if (IsGameOver)
                {
                    <MudButton Variant="Variant.Filled" Color="Color.Primary"
                               Class="mt-8"
                               data-testid="NewGameButton"
                               OnClick="() => NavigationManager.NavigateTo(NewGameUrl)">
                        New Game
                    </MudButton>
                }
                else
                {
                    <MudButtonGroup Class="my-8" Color="Color.Primary" Size="Size.Large" Variant="Variant.Filled">
                        <MudButton OnClick="AdvanceToNextPhase"
                                   Disabled="!CanAdvance">
                            Next
                        </MudButton>
                        <MudButton OnClick="AdvanceToVoting"
                                   Disabled="!CanAdvance">
                            Run to Voting
                        </MudButton>
                        <MudButton OnClick="AdvanceToEnd"
                                   Disabled="!CanAdvance">
                            Run to End
                        </MudButton>
                    </MudButtonGroup>
                }
            </MudCardActions>
        </MudCard>
        <MudPaper class="pa-8 ma-2" Elevation="3">
            <MudTabs>
                <MudTabPanel Text="Events">
                    <EventTimeline Game="@Game" Perspective="@PerspectivePlayer"/>
                </MudTabPanel>
                <MudTabPanel Text="Roles">
                    <MudGrid>
                        @foreach (var role in Game.Roles.GroupBy(r => r))
                        {
                            <MudItem>
                                <RoleInfoCard Role="@role.Key" AllowDrag="false" Count="@role.Count()"/>
                            </MudItem>
                        }
                    </MudGrid>
                </MudTabPanel>
            </MudTabs>
        </MudPaper>
    </div>
}